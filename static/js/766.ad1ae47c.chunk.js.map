{"version":3,"file":"static/js/766.ad1ae47c.chunk.js","mappings":"yPAEaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wHAOpBC,EAAeH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2OAQxBG,EAAUL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6BAGpBK,EAAgBP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4BAG1BO,EAAYT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+BAGrBS,EAAWX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+B,mECsBhC,EAjCa,WACX,IAAQW,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAA2CC,EAAAA,EAAAA,GAAQC,EAAAA,GAAkBJ,GAAvDK,EAAMH,EAAZI,KAAcC,EAAKL,EAALK,MAAOC,EAASN,EAATM,UAE7B,OAAKH,GASHI,EAAAA,EAAAA,KAACvB,EAAQ,CAAAwB,SACNL,EAAOM,KAAI,SAAAC,GAAA,IAAGZ,EAAEY,EAAFZ,GAAIa,EAAYD,EAAZC,aAAcC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAS,OAC9CC,EAAAA,EAAAA,MAAC1B,EAAY,CAAAoB,SAAA,EACXD,EAAAA,EAAAA,KAACjB,EAAO,CACNyB,IAAG,GAAAC,OACDL,EAAY,oCAAAK,OAC4BL,GACpCM,GAENC,IAAKN,KAEPE,EAAAA,EAAAA,MAACtB,EAAa,CAAAgB,SAAA,EACZD,EAAAA,EAAAA,KAACb,EAAS,CAAAc,SAAEI,KACZE,EAAAA,EAAAA,MAAClB,EAAQ,CAAAY,SAAA,CAAC,cAAYK,UAXPf,EAaJ,OAtBjBgB,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAX,SAAA,CACGF,IAAaC,EAAAA,EAAAA,KAACa,EAAAA,GAAM,IACpBf,IAASE,EAAAA,EAAAA,KAAA,MAAAC,SAAKH,MAwBvB,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  /* align-items: center; */\n  justify-content: center;\n  gap: 20px;\n`;\nexport const CastListItem = styled.li`\n  text-align: center;\n  flex-basis: 205px;\n  border-radius: 0px 0px 4px 4px;\n  box-shadow: 0px 2px 1px 0px rgba(46, 47, 66, 0.08),\n    0px 1px 1px 0px rgba(46, 47, 66, 0.16),\n    0px 1px 6px 0px rgba(46, 47, 66, 0.08);\n`;\nexport const CastImg = styled.img`\n  margin: 0 auto;\n`;\nexport const TextContainer = styled.div`\n  padding: 10px;\n`;\nexport const CastTitle = styled.h3`\n  max-width: 185px;\n`;\nexport const CastText = styled.p`\n  max-width: 185px;\n`;\n","import { useParams } from 'react-router-dom';\n//\nimport { Loader } from 'components';\nimport { getMovieCastById } from 'helpers/api';\nimport { useHttp } from 'hooks/useHttp';\nimport {\n  CastImg,\n  CastList,\n  CastListItem,\n  CastText,\n  CastTitle,\n  TextContainer,\n} from './Cast.styled';\nimport defaultCastImg from 'images/oscar-award.jpg';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const { data: actors, error, isLoading } = useHttp(getMovieCastById, id);\n\n  if (!actors)\n    return (\n      <>\n        {isLoading && <Loader />}\n        {error && <h2>{error}</h2>}\n      </>\n    );\n\n  return (\n    <CastList>\n      {actors.map(({ id, profile_path, name, character }) => (\n        <CastListItem key={id}>\n          <CastImg\n            src={`${\n              profile_path\n                ? `  https://image.tmdb.org/t/p/w342${profile_path}`\n                : defaultCastImg\n            }`}\n            alt={name}\n          />\n          <TextContainer>\n            <CastTitle>{name}</CastTitle>\n            <CastText>Character: {character}</CastText>\n          </TextContainer>\n        </CastListItem>\n      ))}\n    </CastList>\n  );\n};\nexport default Cast;\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastListItem","_templateObject2","CastImg","_templateObject3","TextContainer","_templateObject4","CastTitle","_templateObject5","CastText","_templateObject6","id","useParams","_useHttp","useHttp","getMovieCastById","actors","data","error","isLoading","_jsx","children","map","_ref","profile_path","name","character","_jsxs","src","concat","defaultCastImg","alt","_Fragment","Loader"],"sourceRoot":""}